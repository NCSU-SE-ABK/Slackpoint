tests.test_leaderboard
======================

.. py:module:: tests.test_leaderboard


Functions
---------

.. autoapisummary::

   tests.test_leaderboard.test_leaderboard_no_param
   tests.test_leaderboard.test_leaderboard_top_2
   tests.test_leaderboard.test_leaderboard_no_completed_task


Module Contents
---------------

.. py:function:: test_leaderboard_no_param(mock_leaderboard_position_1, mock_leaderboard_position_2, mock_leaderboard_position_3, mock_leaderboard_position_4, mock_leaderboard_position_5, mock_leaderboard_position_6, mock_get_sqlalchemy)

   Test the view pending command

   :param mock_leaderboard_position_1: Mocked Leadership object
   :type mock_leaderboard_position_1: Any
   :param mock_leaderboard_position_2: Mocked Leadership object
   :type mock_leaderboard_position_2: Any
   :param mock_leaderboard_position_3: Mocked Leadership object
   :type mock_leaderboard_position_3: Any
   :param mock_leaderboard_position_4: Mocked Leadership object
   :type mock_leaderboard_position_4: Any
   :param mock_leaderboard_position_5: Mocked Leadership object
   :type mock_leaderboard_position_5: Any
   :param mock_leaderboard_position_6: Mocked Leadership object
   :type mock_leaderboard_position_6: Any
   :param mock_get_sqlalchemy: Mocked SQL Alchemy object
   :type mock_get_sqlalchemy: Any
   :raise:
   :return: Assert if test case executed successfully
   :rtype: bool



.. py:function:: test_leaderboard_top_2(mock_leaderboard_position_1, mock_leaderboard_position_2, mock_leaderboard_position_3, mock_leaderboard_position_4, mock_leaderboard_position_5, mock_leaderboard_position_6, mock_get_sqlalchemy)

   Test the view pending command

   :param mock_leaderboard_position_1: Mocked Leadership object
   :type mock_leaderboard_position_1: Any
   :param mock_leaderboard_position_2: Mocked Leadership object
   :type mock_leaderboard_position_2: Any
   :param mock_leaderboard_position_3: Mocked Leadership object
   :type mock_leaderboard_position_3: Any
   :param mock_leaderboard_position_4: Mocked Leadership object
   :type mock_leaderboard_position_4: Any
   :param mock_leaderboard_position_5: Mocked Leadership object
   :type mock_leaderboard_position_5: Any
   :param mock_leaderboard_position_6: Mocked Leadership object
   :type mock_leaderboard_position_6: Any
   :param mock_get_sqlalchemy: Mocked SQL Alchemy object
   :type mock_get_sqlalchemy: Any
   :raise:
   :return: Assert if test case executed successfully
   :rtype: bool



.. py:function:: test_leaderboard_no_completed_task(mock_leaderboard_position_1, mock_leaderboard_position_2, mock_leaderboard_position_3, mock_leaderboard_position_4, mock_leaderboard_position_5, mock_leaderboard_position_6, mock_get_sqlalchemy)

   Test the view pending command

   :param mock_leaderboard_position_1: Mocked Leadership object
   :type mock_leaderboard_position_1: Any
   :param mock_leaderboard_position_2: Mocked Leadership object
   :type mock_leaderboard_position_2: Any
   :param mock_leaderboard_position_3: Mocked Leadership object
   :type mock_leaderboard_position_3: Any
   :param mock_leaderboard_position_4: Mocked Leadership object
   :type mock_leaderboard_position_4: Any
   :param mock_leaderboard_position_5: Mocked Leadership object
   :type mock_leaderboard_position_5: Any
   :param mock_leaderboard_position_6: Mocked Leadership object
   :type mock_leaderboard_position_6: Any
   :param mock_get_sqlalchemy: Mocked SQL Alchemy object
   :type mock_get_sqlalchemy: Any
   :raise:
   :return: Assert if test case executed successfully
   :rtype: bool



